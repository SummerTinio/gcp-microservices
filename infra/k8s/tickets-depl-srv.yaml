### FOR THE DEPLOYMENT ###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-depl
spec:
  replicas: 1
  selector:
    matchLabels: # to help Deployment find the set of pods it'll manage
      app: tickets # <--- this 

  ### FOR THE PODS ###  
  template:
    metadata:
      labels:
        app: tickets # <--- must match this
    
    ### FOR EACH CONTAINER ###
    spec:
      containers:
        - name: tickets
          image: us.gcr.io/ticketing-dev-318410/tickets # summertinio/tickets # us.gcr.io/ticketing-dev-318410/tickets # if from dockerhub, summertinio/tickets
          env:
            - name: MS
              value: tickets
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_KEY
---
### FOR THHE SERVICE ###
apiVersion: v1
kind: Service
metadata:
  name: tickets-srv
spec:
  selector: # <--- to help Service find its corresponding Deployment
    app: tickets # <--- must match to app: tickets (whatever u named ur app)
  ports:
    - name: tickets # for logging purposes
      protocol: TCP
      port: 3000
      targetPort: 3000
---
# for tickets's own MongoDB instance

### FOR THE DEPLOYMENT ###
apiVersion: apps/v1
kind: Deployment # to create a pod w/ 1 container
metadata:
  name: tickets-mongo-depl

### FOR EACH POD ###
spec:
  replicas: 1
  selector:
    matchLabels: # matchLabels will allow the Deployment to find the pods it created
      app: tickets-mongo # *** match this ***
  template:
    metadata:
      labels:
        app: tickets-mongo # *** to this (label will be applied to the pod) ***
    
    ### FOR EACH CONTAINER ###
    spec:
      containers:
        - name: tickets-mongo # pod name === container name (in this case)
          image: mongo
---
### FOR THE SERVICE ###
apiVersion: v1
kind: Service
metadata:
  name: tickets-mongo-srv

### FOR THE CLUSTERIP ###
spec:
  type: ClusterIP
  selector:
    app: tickets-mongo # "apply tickets-mongo-srv to whatever has label app: tickets-mongo" .. i.e. our Pod
  ports:
    - name: db # for logging purposes -- for this port
      protocol: TCP
      port: 27017 # port === targetPort (in this case, since 1 pod === 1 container)

      ### FROM THE MONGODB SERVER ###
      targetPort: 27017 # port from ur mongodb server. 